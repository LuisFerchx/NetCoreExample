{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/legend/legend.js","../src/circular-gauge/model/pdf-export.js","../src/circular-gauge/model/image-export.js","../src/circular-gauge/model/print.js","../src/circular-gauge/axes/gradient.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n *\n * @param {HTMLElement} element - Specifies the html element.\n * @returns {ClientRect} - Returns the client rect.\n * @private\n */\nexport function measureElementRect(element) {\n    document.body.appendChild(element);\n    var bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (gauge.isBlazor) {\n            var numb = template.match(/\\d+/g).toString();\n            template = numb ? template.replace(numb, '') : template;\n            template = template.indexOf('/') !== -1 ? template.replace('/', '') : template;\n        }\n        if (document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name.\n * @param {ExportType} type - Specifies the export type.\n * @param {string} url - Specifies the url.\n * @param {boolean} isDownload - Specifies the boolean value.\n * @returns {void}\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(this.elementId + '_Secondary_Element'))) {\n            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount && !this.gauge.isBlazor) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        if (this.gauge.isBlazor) {\n            var cancel = argsData.cancel, name_1 = argsData.name, content = argsData.content, textStyle = argsData.textStyle;\n            argsData = { cancel: cancel, name: name_1, content: content, annotation: annotation, textStyle: textStyle };\n        }\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && (!_this.gauge.isBlazor ? templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!_this.gauge.isBlazor ? axis : {}, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n                if (_this.gauge.isBlazor && annotationIndex === (_this.gauge.axes[axisIndex].annotations.length - 1) &&\n                    element && parentElement) {\n                    parentElement.appendChild(element);\n                    for (var i = 0; i < _this.gauge.axes[axisIndex].annotations.length; i++) {\n                        updateBlazorTemplate(_this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + i, 'ContentTemplate', _this.gauge.axes[axisIndex].annotations[i]);\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize, stringToNumber } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            if (this.gauge.isBlazor) {\n                var name_1 = tooltipArgs.name, cancel = tooltipArgs.cancel, content = tooltipArgs.content, location_1 = tooltipArgs.location, tooltip = tooltipArgs.tooltip, event_1 = tooltipArgs.event, appendInBodyTag = tooltipArgs.appendInBodyTag, type = tooltipArgs.type;\n                tooltipArgs = { name: name_1, cancel: cancel, content: content, location: location_1, tooltip: tooltip, event: event_1, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    tooltipArgs.tooltip.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    tooltipArgs.tooltip.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, tooltipArgs.tooltip.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            if (this.gauge.isBlazor) {\n                var name_2 = rangeTooltipArgs.name, cancel = rangeTooltipArgs.cancel, content = rangeTooltipArgs.content, location_2 = rangeTooltipArgs.location, tooltip = rangeTooltipArgs.tooltip, event_2 = rangeTooltipArgs.event, appendInBodyTag = rangeTooltipArgs.appendInBodyTag, type = rangeTooltipArgs.type;\n                rangeTooltipArgs = { name: name_2, cancel: cancel, content: content, location: location_2, tooltip: tooltip, event: event_2, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipArgs.tooltip.rangeSettings.textStyle, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            if (this.gauge.isBlazor) {\n                var name_3 = annotationTooltipArgs.name, cancel = annotationTooltipArgs.cancel, content = annotationTooltipArgs.content, location_3 = annotationTooltipArgs.location, tooltip = annotationTooltipArgs.tooltip, event_3 = annotationTooltipArgs.event, appendInBodyTag = annotationTooltipArgs.appendInBodyTag, type = annotationTooltipArgs.type;\n                annotationTooltipArgs = { name: name_3, cancel: cancel, content: content, location: location_3, tooltip: tooltip, event: event_3, appendInBodyTag: appendInBodyTag, type: type };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.clearTemplate();\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            blazorTemplate: { name: 'TooltipTemplate', parent: gauge.tooltip }\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getDegree, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? startAngle + (axis.rangeGap / Math.PI) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    endAngle - (axis.rangeGap / Math.PI) : endAngle;\n        }\n        if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n            endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n            endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n            var radius = range.roundedCornerRadius;\n            var process = (radius * 0.25);\n            var degreeValue = getDegree(startAngle, endAngle);\n            oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n            oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n            roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                    ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n            roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                    ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n            if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                if (range.isLinearCircularGradient) {\n                    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                    var degree = getDegree(startAngle, endAngle);\n                    var rangeColorLength = range.linearGradient.colorStop.length;\n                    var degreeRange = ((axis.startAngle === axis.endAngle ?\n                        (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                        (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                    var degreeRangeValue = void 0;\n                    if (degreeRange <= 360 && degreeRange >= 270) {\n                        degreeRangeValue = 270;\n                    }\n                    else if (degreeRange <= 270 && degreeRange >= 180) {\n                        degreeRangeValue = 180;\n                    }\n                    else if (degreeRange <= 180 && degreeRange >= 90) {\n                        degreeRangeValue = 90;\n                    }\n                    else if (degreeRange <= 90 && degreeRange >= 0) {\n                        degreeRangeValue = 0;\n                    }\n                    var gradientDegree = axis.direction === 'AntiClockWise' ?\n                        (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                        : axis.startAngle + degree * (colorIndex);\n                    var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                        ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                            + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                            axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                        + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                        ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                            : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                        gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                    range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                        : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                        : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                    if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                        ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                        range.gradientAntiAngle = gradientAngle;\n                    }\n                    if (rangeIndex !== 0) {\n                        gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                            axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                            axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                            range.gradientAngle + gradientAngle - axis.startAngle;\n                        range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                            gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                    }\n                    if (gradientAngle > 45 && gradientAngle <= 115\n                        || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                        direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                    }\n                    else if (gradientAngle > 115 && gradientAngle < 170) {\n                        direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                    }\n                    else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                        direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                    }\n                    else if (gradientAngle > 280 && gradientAngle <= 360\n                        || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                        direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                    }\n                }\n                gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n            }\n            range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n            if (range.roundedCornerRadius) {\n                if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                    if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                        if (axis.direction === 'ClockWise') {\n                            this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                        }\n                        else {\n                            this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                        }\n                    }\n                    else {\n                        this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                    }\n                }\n                else {\n                    this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                }\n            }\n            else {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc, getLocationFromAngle, appendPath, textElement, PathOption, TextOption, calculateShapes, Size, stringToNumber } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n            }\n            else {\n                pointer.currentDistanceFromScale = pointer.offset;\n            }\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate || pointer.animation.enable) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            if (this_1.gauge.isBlazor) {\n                var cancel = args.cancel, name_1 = args.name, currentRadius_1 = args.currentRadius, midPoint = args.midPoint;\n                args = { cancel: cancel, name: name_1, currentRadius: currentRadius_1, midPoint: midPoint };\n            }\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                if (!_this.gauge.isBlazor) {\n                    _this.calculateVisibleLabels(axis);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var _this = this;\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        var _loop_2 = function (i) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            if (this_2.gauge.isBlazor) {\n                var axis_1 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    if (i === max && _this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        var currentLast = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value\n                            : null;\n                        if (currentLast === axis.visibleRange.max || axis.showLastLabel !== true) {\n                            _this.getMaxLabelWidth(_this.gauge, axis);\n                            axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                            axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                            _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                        }\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this_2);\n            this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        };\n        var this_2 = this;\n        for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n            _loop_2(i);\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            if (this.gauge.isBlazor) {\n                var axis_2 = argsData.axis, blazorArgsData = __rest(argsData, [\"axis\"]);\n                argsData = blazorArgsData;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                    if (_this.gauge.isBlazor && document.getElementById(_this.gauge.element.id + '_AxesCollection')) {\n                        _this.getMaxLabelWidth(_this.gauge, axis);\n                        axis.farSize = axis.farSize + axis.maxLabelSize.height;\n                        axis.nearSize = axis.nearSize + axis.maxLabelSize.height;\n                        _this.axisRenderer.drawAxisLabels(axis, _this.gauge.axes.length - 1, (document.getElementById(_this.gauge.element.id + '_Axis_Group_' + (_this.gauge.axes.length - 1))), _this.gauge);\n                    }\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { appendPath, textElement, PathOption, TextOption, calculateShapes, textTrim, removeElement } from '../utils/helper';\nimport { Rect, Size, GaugeLocation, stringToNumber, measureText, RectOption, getElement, showTooltip } from '../utils/helper';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                rangeElement.style.visibility = 'visible';\n                shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex].fill);\n                textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                rangeElement.style.visibility = 'hidden';\n                shapeElement.setAttribute('fill', hiddenColor);\n                textElement_1.setAttribute('fill', hiddenColor);\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation } from './utils/helper';\nimport { getValueFromAngle, removeElement, getRange } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.isBlazor = isBlazor();\n        this.unWireEvents();\n        this.trigger(load, this.isBlazor ? null : { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    dragBlazorArgs = {\n                        name: dragMove,\n                        type: rangeMove,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : this.activeRange.start);\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : this.activeRange.end) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: pointerStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    type: rangeStart,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: pointerEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                type: rangeEnd,\n                rangeIndex: rangeInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: !this.isBlazor ? this : null,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        if (!isNullOrUndefined(this.element)) {\n            if (this.element.classList.contains('e-circulargauge')) {\n                this.createSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            args.currentSize = this.availableSize;\n            this.animatePointer = false;\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            else if (this.element.classList.contains('e-circulargauge')) {\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                    args.currentSize = _this.availableSize;\n                    if (_this.isBlazor) {\n                        var previousSize = args.previousSize, name_1 = args.name, currentSize = args.currentSize;\n                        args = { previousSize: previousSize, name: name_1, currentSize: currentSize };\n                    }\n                    _this.trigger(resized, args);\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerX !== null ?\n                stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerX !== null ?\n                stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerY !== null ?\n                stringToNumber(this.centerY, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","range","axis","startRadius","isNullOrUndefined","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","roundedCornerRadius","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getCompleteArc","innerRadius","checkMinValue","getCompletePath","getElement","getTemplateFunction","template","templateFn","isBlazor","numb","match","toString","replace","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","split","axisIndex","pointerIndex","getRange","rangeIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","calculateShapes","location","shape","url","path","space","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","triggerDownload","fileName","type","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","dragEnd","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","name_1","trigger","observedArgs","length_1","slice","updateLocation","updateBlazorTemplate","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","tooltipRect","findPosition","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","svgTooltipCreate","arrowInverted","tooltipFillOpacity","appendTo","parseFloat","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","clearTemplate","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","tooltipFillColor","blazorTemplate","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","lineColor","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","labelColor","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","labelFontFamily","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTickColor","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","theme","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","needleColor","needleTailColor","capColor","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","markerHeight","imageUrl","pointerColor","drawRangeBarPointer","gradientBarColor","previousValue","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","__rest","s","t","getOwnPropertySymbols","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","currentRadius_1","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","_loop_2","this_2","blazorArgsData","axisLabelRenderSuccess","getMaxLabelWidth","lastLabel","maxVal","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","toggledIndex","legendItemsId_1","isNaN","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","orientation","allowDownload","Promise","resolve","reject","userAgent","PdfPageOrientation","Landscape","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","svgData","outerHTML","image_1","context_1","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","cloneNode","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","toLowerCase","backgroundColor","titleFontColor","fontSize","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","enableRangeDrag","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","resetBlazorTemplate","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component"],"mappings":"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"}