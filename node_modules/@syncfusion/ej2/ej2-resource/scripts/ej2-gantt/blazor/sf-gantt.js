import { isNullOrUndefined } from '@syncfusion/ej2-base';
import { SfGantt } from './sf-gantt-fn';
import { addClass } from '@syncfusion/ej2-base';
import * as cls from './css-constants';
import { ChartScroll } from './chart-body-scroll';
import { TreeGrid } from './treegrid';
import { TaskbarEdit } from './taskbar-edit';
import { KeyboardHandler } from './keyboard';
var Gantt = {
    initialize: function (element, options, dotnetRef) {
        new SfGantt(element, options, dotnetRef);
        this.dotnetRef = dotnetRef;
        var offset = {};
        element.blazor_instance.height = offset.height = element.offsetHeight;
        element.blazor_instance.width = offset.width = element.offsetWidth;
        element.blazor_instance.toolbarElement = element.querySelector("#" + element.id + "_Gantt_Toolbar");
        if (!isNullOrUndefined(element.blazor_instance.toolbarElement)) {
            element.blazor_instance.toolbarHeight = offset.toolbarHeight = element.blazor_instance.toolbarElement.offsetHeight;
        }
        return offset;
    },
    getTotalColumnWidthByIndex: function (element, index) {
        return element.blazor_instance.splitterModule.getTotalColumnWidthByIndex(index);
    },
    treegridDataBound: function (element, isSingleTier) {
        this.ensureScrollBar(element);
        this.treegridHeaderAlign(element, isSingleTier);
    },
    setChartHeight: function setChartHeight(element) {
        var treegrid = document.getElementById("treeGrid" + element.id + "_gridcontrol_content_table");
        if (treegrid && treegrid.clientHeight) {
            var chart = document.getElementById(element.id + "_chart");
            var chartContent = chart.getElementsByClassName("e-chart-rows-container")[0];
            chartContent.style.height = treegrid.clientHeight + "px";
        }
    },
    treegridHeaderAlign: function (element, isSingleTier) {
        if (isSingleTier) {
            addClass(element.blazor_instance.treeGridElement.querySelectorAll('.e-headercell'), cls.timelineSingleHeaderOuterDiv);
            addClass(element.blazor_instance.treeGridElement.querySelectorAll('.e-columnheader'), cls.timelineSingleHeaderOuterDiv);
            var TreeGridcontent = element.querySelector('.e-yscroll');
            var chartContentHeight = element.querySelector('.e-chart-scroll-container').offsetHeight;
            TreeGridcontent.style.height = chartContentHeight + "px";
        }
    },
    getTreeGrid: function (element) {
        element.blazor_instance.treeGrid = element.blazor_instance.treeGridElement.blazor_instance;
    },
    ensureScrollBar: function (element) {
        element.blazor_instance.treeGridElement = element.querySelector('#treeGrid' + element.id);
        var content = element.blazor_instance.treeGridElement.querySelector('.e-content');
        if (content) {
            var gridHeader = element.blazor_instance.treeGridElement.querySelector('.e-gridheader');
            content.style.height = element.blazor_instance.height - element.blazor_instance.toolbarHeight -
                gridHeader.offsetHeight + "px";
            element.blazor_instance.treeGridModule = new TreeGrid(element.blazor_instance, content);
        }
        var scrollWidth = this.getScrollbarWidth(element);
        if (scrollWidth !== 0) {
            content.style.cssText += 'width: calc(100% + ' + scrollWidth + 'px);';
        }
    },
    getScrollbarWidth: function (element) {
        var outer = document.createElement('div');
        outer.style.visibility = 'hidden';
        outer.style.overflow = 'scroll';
        outer.style.msOverflowStyle = 'scrollbar';
        var inner = document.createElement('div');
        outer.appendChild(inner);
        element.appendChild(outer);
        var scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);
        outer.parentNode.removeChild(outer);
        return scrollbarWidth;
    },
    ChartInitialize: function (element, ganttHeight, contentHeight, totalTimelineWidth) {
        element.blazor_instance.totalTimelineWidth = totalTimelineWidth;
        if (element.blazor_instance.options.allowTaskbarEditing) {
            element.blazor_instance.taskbarEditModule = new TaskbarEdit(element.blazor_instance);
        }
        element.blazor_instance.chartScrollModule = new ChartScroll(element.blazor_instance, element, ganttHeight, contentHeight);
        return element.blazor_instance.chartScrollModule.viewPortHeight;
    },
    UpdateScroll: function (element, scrollBarValue) {
        this.scrollBarElement = element.querySelector('.e-chart-scroll-container');
        if (this.scrollBarElement.offsetWidth < scrollBarValue || this.scrollBarElement.scrollLeft > scrollBarValue) {
            this.scrollBarElement.scrollLeft = scrollBarValue;
        }
    },
    calcRowHeight: function (element) {
        return element.querySelector('.e-row').offsetHeight;
    },
    focusOutHandler: function (elem) {
        elem.classList.remove(cls.Active);
    },
    tabFocusHandler: function (id, elem, isShift) {
        elem.blazor_instance.keyboardModule = new KeyboardHandler(elem.blazor_instance);
        var tdElem = elem.querySelector(".e-chart-row-cell[data-uid=" + id + "]");
        var focusElem = tdElem.querySelector('.' + cls.Active) ? tdElem.querySelector('.' + cls.Active).parentElement : null;
        if (!focusElem) {
            var result = "isNextLeftLabel";
            if (!isShift && tdElem.querySelector('.' + cls.LeftLabel)) {
                result = elem.blazor_instance.keyboardModule.LeftLabelFocus(tdElem);
            }
            else if (isShift && tdElem.querySelector('.' + cls.RightLabel)) {
                result = elem.blazor_instance.keyboardModule.RightLabelFocus(tdElem);
            }
            else {
                result = elem.blazor_instance.keyboardModule.taskbarFocus(tdElem);
            }
            return result;
        }
        else if (focusElem.classList.contains(cls.LeftLabel)) {
            if (isShift) {
                focusElem.querySelector('.e-label').classList.remove(cls.Active);
                focusElem.blur();
                return "isNextGrid";
            }
            else {
                return elem.blazor_instance.keyboardModule.taskbarFocus(tdElem);
            }
        }
        else if (!focusElem.classList.length) {
            if (!isShift) {
                if (tdElem.querySelector('.e-right-label-inner-div')) {
                    return elem.blazor_instance.keyboardModule.RightLabelFocus(tdElem);
                }
                else {
                    return "isNextGrid";
                }
            }
            else {
                if (tdElem.querySelector('.e-left-label-inner-div')) {
                    return elem.blazor_instance.keyboardModule.LeftLabelFocus(tdElem);
                }
                else {
                    return "isNextGrid";
                }
            }
        }
        else if (focusElem.classList.contains(cls.RightLabel)) {
            if (isShift) {
                return elem.blazor_instance.keyboardModule.taskbarFocus(tdElem);
            }
            else {
                return "isNextGrid";
            }
        }
        else {
            return "";
        }
    },
    getChartWidth: function (element) {
        return element.querySelector('.e-gantt-chart-pane').clientWidth;
    }
};
export default Gantt;
