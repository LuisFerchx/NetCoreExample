import { select, closest } from '@syncfusion/ej2-base';
var MENUITEM = 'e-menu-item';
var FOCUSED = 'e-focused';
var SELECTED = 'e-selected';
var CONTAINER = 'e-menu-container';
var MENU = 'e-contextmenu';
var SUBMENU = 'e-ul';
var SEPARATOR = 'e-separator';
var DISABLED = 'e-disabled';
var HIDE = 'e-menu-hide';
var MENUPARENT = 'e-menu-parent';
var RTL = 'e-rtl';
var HAMBURGER = '.e-hamburger';
var SCROLLMENU = '.e-menu-vscroll';
var NONE = 'none';
var DOT = '.';
var ESC = 27;
var ENTER = 13;
var UP = 38;
var DOWN = 40;
var LEFT = 37;
var RIGHT = 39;
export function keyActionHandler(container, target, keyCode, menuId) {
    if (keyCode === DOWN || keyCode === UP) {
        var index = void 0;
        var ul = void 0;
        var focusedLi = void 0;
        if (target.classList.contains(MENUPARENT)) {
            ul = target;
            focusedLi = ul.querySelector("" + DOT + MENUITEM + DOT + FOCUSED);
            if (focusedLi) {
                index = Array.prototype.indexOf.call(ul.children, focusedLi);
                index = keyCode === DOWN ? (index === ul.childElementCount - 1 ? 0 : index + 1) :
                    (index === 0 ? ul.childElementCount - 1 : index - 1);
            }
            else {
                index = 0;
            }
            index = isValidLI(ul, index, keyCode === DOWN);
        }
        else if (target.classList.contains(MENUITEM)) {
            ul = target.parentElement;
            focusedLi = ul.querySelector("" + DOT + MENUITEM + DOT + FOCUSED);
            index = Array.prototype.indexOf.call(ul.children, focusedLi ? focusedLi : target);
            index = keyCode === DOWN ? (index === ul.childElementCount - 1 ? 0 : index + 1) : (index === 0 ?
                ul.childElementCount - 1 : index - 1);
            index = isValidLI(ul, index, keyCode === DOWN);
        }
        if (ul && index !== -1) {
            ul.children[index].focus();
        }
    }
    else if (((container.classList.contains(RTL) ? keyCode === RIGHT : keyCode === LEFT) || keyCode === ESC ||
        (keyCode === ENTER && closest(target, DOT + CONTAINER))) && (target.classList.contains(SUBMENU) ||
        (target.classList.contains(MENUITEM) && !(target.parentElement.classList.contains(MENU))))) {
        var menuContainer = void 0;
        if (menuId) {
            menuContainer = select(menuId);
        }
        var ul = target.classList.contains(SUBMENU) ? target : target.parentElement;
        var menu = closest(ul, SCROLLMENU);
        var selectedLi = void 0;
        var previousUl = menu ? menu.previousElementSibling : ul.previousElementSibling;
        if (menuContainer && (!previousUl || keyCode === ENTER)) {
            selectedLi = select("" + DOT + MENUITEM + DOT + SELECTED, menuContainer);
            menu = select(SCROLLMENU, container);
            if (menu) {
                menuContainer.blazor__instance.destroyScroll(NONE);
            }
        }
        else {
            var hamburgerMenu = closest(ul, HAMBURGER);
            if (hamburgerMenu) {
                selectedLi = select("" + DOT + MENUITEM + DOT + SELECTED, hamburgerMenu);
            }
            else {
                selectedLi = select("" + DOT + MENUITEM + DOT + SELECTED, previousUl);
            }
        }
        if (selectedLi) {
            selectedLi.focus();
        }
    }
}
function isValidLI(ul, index, isKeyDown, count) {
    if (count === void 0) { count = 0; }
    var cli = ul.children[index];
    if (count === ul.childElementCount) {
        return -1;
    }
    if (cli.classList.contains(SEPARATOR) || cli.classList.contains(DISABLED) || cli.classList.contains(HIDE)) {
        index = isKeyDown ? (index === ul.childElementCount - 1 ? 0 : index + 1) : (index === 0 ? ul.childElementCount - 1 : index - 1);
        count++;
    }
    cli = ul.children[index];
    if (cli.classList.contains(SEPARATOR) || cli.classList.contains(DISABLED) || cli.classList.contains(HIDE)) {
        index = isValidLI(ul, index, isKeyDown);
    }
    return index;
}
