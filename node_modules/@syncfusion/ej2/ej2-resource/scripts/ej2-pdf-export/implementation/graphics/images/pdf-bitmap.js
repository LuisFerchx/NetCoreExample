var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { ImageDecoder } from './../../graphics/images/image-decoder';
import { ByteArray } from './../../graphics/images/byte-array';
import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';
import { PdfImage } from './pdf-image';
var PdfBitmap = (function (_super) {
    __extends(PdfBitmap, _super);
    function PdfBitmap(encodedString) {
        var _this = _super.call(this) || this;
        _this.imageStatus = true;
        _this.dictionaryProperties = new DictionaryProperties();
        _this.loadImage(encodedString);
        return _this;
    }
    PdfBitmap.prototype.loadImage = function (encodedString) {
        var task = this.initializeAsync(encodedString);
    };
    PdfBitmap.prototype.initializeAsync = function (encodedString) {
        var byteArray = new ByteArray(encodedString.length);
        byteArray.writeFromBase64String(encodedString);
        this.decoder = new ImageDecoder(byteArray);
        this.height = this.decoder.height;
        this.width = this.decoder.width;
        this.bitsPerComponent = this.decoder.bitsPerComponent;
    };
    PdfBitmap.prototype.save = function () {
        this.imageStatus = true;
        this.imageStream = this.decoder.getImageDictionary();
    };
    return PdfBitmap;
}(PdfImage));
export { PdfBitmap };
