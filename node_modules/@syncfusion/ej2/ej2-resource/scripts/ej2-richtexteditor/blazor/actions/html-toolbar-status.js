import * as events from '../constant';
import { ToolbarStatus } from '../../src/editor-manager/plugin/toolbar-status';
var HtmlToolbarStatus = (function () {
    function HtmlToolbarStatus(parent) {
        this.parent = parent;
        this.addEventListener();
    }
    HtmlToolbarStatus.prototype.addEventListener = function () {
        this.parent.observer.on(events.toolbarRefresh, this.onRefreshHandler, this);
        this.parent.observer.on(events.destroy, this.removeEventListener, this);
    };
    HtmlToolbarStatus.prototype.removeEventListener = function () {
        this.parent.observer.off(events.toolbarRefresh, this.onRefreshHandler);
        this.parent.observer.off(events.destroy, this.removeEventListener);
    };
    HtmlToolbarStatus.prototype.onRefreshHandler = function (args) {
        if (this.parent.readonly) {
            return;
        }
        var fontsize = [];
        var fontName = [];
        var formats = [];
        this.parent.fontSize.items.forEach(function (item) { fontsize.push(item.value); });
        this.parent.fontFamily.items.forEach(function (item) { fontName.push(item.value); });
        this.parent.format.items.forEach(function (item) {
            formats.push(item.value.toLocaleLowerCase());
        });
        this.toolbarStatus = ToolbarStatus.get(this.parent.getDocument(), this.parent.getEditPanel(), formats, fontsize, fontName, args.documentNode);
        this.parent.observer.notify(events.toolbarUpdated, this.toolbarStatus);
    };
    return HtmlToolbarStatus;
}());
export { HtmlToolbarStatus };
