import { enableBlazorMode, isNullOrUndefined } from '@syncfusion/ej2-base';
import { SfTreeGrid } from './sf-treegrid-fn';
var TreeGrid = {
    initialize: function (element, options, dotnetRef) {
        enableBlazorMode();
        new SfTreeGrid(element, options, dotnetRef);
    },
    modelChanged: function (element, options) {
        if (!isNullOrUndefined(element) && !isNullOrUndefined(element.blazor_instance)) {
            element.blazor_instance.options = options;
        }
    },
    headerCheckbox: function (element, colIndex, options, dotnetRef) {
        if (!isNullOrUndefined(element)) {
            element.blazor_instance.checkboxcolumnModule.renderHeaderCheckbox(element, colIndex);
        }
    },
    updateCheckbox: function (element, colIndex, checkState) {
        var thElement = element.querySelectorAll('.e-gridheader th')[colIndex];
        var spanElement = thElement.querySelector('span.e-frame');
        element.blazor_instance.checkboxcolumnModule.updateHeaderCheckbox(spanElement, checkState);
    },
    copyToClipBoard: function (element, withHeader) {
        if (element.blazor_instance.grid.options.selectionMode === 'Cell') {
            element.blazor_instance.grid.clipboardModule.copy(withHeader);
        }
        else {
            element.blazor_instance.clipboardModule.copy(withHeader);
        }
    },
    destroy: function (element) {
        element.blazor_instance.destroy();
    },
};
export default TreeGrid;
