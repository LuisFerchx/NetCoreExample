var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';
import { Font } from '../utils/utils';
import { Theme } from '../model/theme';
var SubTitle = (function (_super) {
    __extends(SubTitle, _super);
    function SubTitle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Property(true)
    ], SubTitle.prototype, "visible", void 0);
    __decorate([
        Property('')
    ], SubTitle.prototype, "text", void 0);
    __decorate([
        Property('')
    ], SubTitle.prototype, "description", void 0);
    __decorate([
        Property('far')
    ], SubTitle.prototype, "textAlignment", void 0);
    __decorate([
        Property(true)
    ], SubTitle.prototype, "enableTrim", void 0);
    __decorate([
        Property('auto')
    ], SubTitle.prototype, "maximumWidth", void 0);
    __decorate([
        Complex(Theme.smithchartSubtitleFont, Font)
    ], SubTitle.prototype, "font", void 0);
    return SubTitle;
}(ChildProperty));
export { SubTitle };
var Title = (function (_super) {
    __extends(Title, _super);
    function Title() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Property(true)
    ], Title.prototype, "visible", void 0);
    __decorate([
        Property('')
    ], Title.prototype, "text", void 0);
    __decorate([
        Property('')
    ], Title.prototype, "description", void 0);
    __decorate([
        Property('center')
    ], Title.prototype, "textAlignment", void 0);
    __decorate([
        Property(true)
    ], Title.prototype, "enableTrim", void 0);
    __decorate([
        Property('auto')
    ], Title.prototype, "maximumWidth", void 0);
    __decorate([
        Complex({}, SubTitle)
    ], Title.prototype, "subTitle", void 0);
    __decorate([
        Complex(Theme.smithchartTitleFont, Font)
    ], Title.prototype, "font", void 0);
    return Title;
}(ChildProperty));
export { Title };
