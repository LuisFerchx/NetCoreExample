import { isNullOrUndefined, closest } from '@syncfusion/ej2-base';
import { SfKanban } from './kanban/kanban';
import * as cls from './kanban/constant';
var Kanban = {
    initialize: function (element, options, dotnetRef) {
        if (element) {
            new SfKanban(element, options, dotnetRef);
        }
    },
    isDevice: function (dotnetRef) {
        dotnetRef.invokeMethodAsync(cls.WINDOW_WIDTH, ((window.innerWidth * 70) / 100));
    },
    updateScrollPosition: function (element) {
        if (element && element.blazor__instance) {
            element.blazor__instance.updateScrollPosition();
        }
    },
    wireDragEvents: function (element) {
        if (element && element.blazor__instance) {
            element.blazor__instance.wireDragEvent();
        }
    },
    propertyChanged: function (element, changedProps) {
        if (!isNullOrUndefined(element)) {
            element.blazor__instance.onPropertyChanged(changedProps);
        }
    },
    swimlaneProperties: function (element, isDrag, keyField) {
        if (!isNullOrUndefined(element)) {
            element.blazor__instance.onSwimlaneProperties(isDrag, keyField);
        }
    },
    cardClick: function (element, card, e) {
        element.blazor__instance.onCardClick(card, e);
    },
    menuClick: function (element) {
        element.blazor__instance.onMenuClick();
    },
    listViewClick: function (element) {
        element.blazor__instance.onListViewClick();
    },
    getTargetDetails: function (element, left, top, isTemplate) {
        if (element && element.blazor__instance) {
            var target = document.elementFromPoint(left, top);
            var targetElement = void 0;
            var text = null;
            if (isTemplate) {
                targetElement = closest(target, '.' + cls.CARD_CLASS);
                text = JSON.stringify(targetElement.getAttribute('data-id'));
            }
            else if (target.classList.contains(cls.TOOLTIP_TEXT_CLASS)) {
                text = JSON.stringify(target.innerHTML);
            }
            return text;
        }
        return null;
    },
    destroy: function (element) {
        if (element && element.blazor__instance) {
            element.blazor__instance.destroy();
        }
    }
};
export default Kanban;
