{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/model/print.js","../../src/treemap/model/image-export.js","../../src/treemap/model/pdf-export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Create the class for size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n *\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n *\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id.\n * @returns {Size} - Returns the size.\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = text;\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n *\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * Trim the title text\n *\n * @param {number} maxWidth - Specifies the maximum width\n * @param {string} text - Specifies the text\n * @param {FontModel} font - Specifies the font\n * @returns {string} - Returns the string\n * @private\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Map internal class for Point\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    var y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\nexport function createTextStyle(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrenderer, renderOptions, text) {\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n *\n * @param {TextOption} options - Specifies the text option\n * @param {FontModel} font - Specifies the font model\n * @param {string} color - Specifies the color\n * @param {HTMLElement | Element} parent - Specifes the html element\n * @param {boolean} isMinus - Specifies the boolean value\n * @returns {Element} - Returns the element\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var spacing = 5;\n        var drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 && !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath : treemap.weightValuePath;\n        if (source[i] === processData[path]) {\n            name += (processData[path]) + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function findChildren(data) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n *\n * @param {string} template - Specifies the template\n * @returns {Function} - Returns the template function\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n * @param {HTMLCollection} element - Specifies the element\n * @param {string} labelId - Specifies the label id\n * @param {Object} data - Specifies the data\n * @returns {HTMLElement} - Returns the element\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId,\n        styles: 'position: absolute;pointer-events: auto;'\n    });\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        templateHtml = templateHtml.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var elementRect = treemap.element.getBoundingClientRect();\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height\n    };\n}\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\nexport function colorMap(colorMapping, equalValue, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue, weightValuePath) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) && (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to) || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity) && fill) {\n            opacity = deSaturationColor(weightValuePath, colorMapping[i], fill, value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\nexport function deSaturationColor(weightValuePath, colorMapping, color, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var prev1;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    var midreturn;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\nexport function textWrap(maxWidth, label, font) {\n    var text = label;\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n *\n * @param {number} maxWidth - Specifies the maximum width\n * @param {number} maxHeight - Specifies the maximum height\n * @param {string} text - Specifies the text\n * @param {FontModel} font - Specifies the font\n * @returns {string} - Returns the hideText\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\nexport function legendMaintain(treemap, legendGroup) {\n    var elementId = treemap.legendId;\n    if (elementId) {\n        for (var i = 0; i < elementId.length; i++) {\n            for (var j = 0; j < legendGroup.childElementCount; j++) {\n                if (legendGroup.childNodes[j]['id'] === elementId[i]) {\n                    legendGroup.childNodes[j].setAttribute('fill', treemap.selectionSettings.fill);\n                    legendGroup.childNodes[j].setAttribute('stroke', treemap.selectionSettings.border.color);\n                    legendGroup.childNodes[j].setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                    legendGroup.childNodes[j].setAttribute('opacity', treemap.selectionSettings.opacity);\n                }\n            }\n        }\n    }\n}\nexport function removeClassNames(elements, type, treemap) {\n    var opacity;\n    var process = true;\n    var element;\n    var stroke;\n    var strokeWidth;\n    var fill;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[element.id.split('_')[6]]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    if (!isNullOrUndefined(options['fill'])) {\n        element.setAttribute('fill', options['fill']);\n    }\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\nexport function formatValue(value, treemap) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/**\n * @private\n */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/**\n * @param {ColorValue} value - Specfies the color value\n * @returns {string} - Returns the string\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * @param {number} value - Specifes the value\n * @returns {string} - Returns the string\n * @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * @param {string} hex - Specifies the hex value\n * @returns {ColorValue} - Returns the color value\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * @param {string} color - Specifies the color\n * @returns {string} - Returns the string\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    var element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var exp = /^(rgb|hsl)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/;\n    var isRGBValue = exp.exec(color);\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {string} shape - Specifies the shape\n * @param {Size} size - Specifies the size\n * @param {string} url - Specifies the url\n * @param {PathOption} options - Specifies the options\n * @param {string} label - Specifies the label\n * @returns {Element} - Returns the element\n * @private\n */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var functionName = 'Path';\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {Size} size - Specifies the size\n * @param {string} shape - Specifies the shape\n * @param {PathOption} options - Specifies the path option\n * @param {string} url - Specifies the string\n * @returns {IShapes} - Returns the shapes\n * @private\n */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            // eslint-disable-next-line no-case-declarations\n            var eq = 72;\n            // eslint-disable-next-line no-case-declarations\n            var xValue = void 0;\n            // eslint-disable-next-line no-case-declarations\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Ajax support for treemap\n */\nvar TreeMapAjax = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function removeShape(collection, value) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function removeLegend(collection, value) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection, 'highlight');\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\nexport function pushCollection(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncollection, index, number, legendElement, shapeElement, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrenderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name\n * @param {ExportType} type - Specifies the type\n * @param {string} url - Specifies the url\n * @param {boolean} isDownload - Specifies the boolean value\n * @returns {void}\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\nexport function removeElement(id) {\n    var element = document.getElementById(id);\n    return element ? remove(element) : null;\n}\n","/**\n * Maps Themes doc\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Theme;\n(function (Theme) {\n    /**\n     * @private\n     */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * To get the theme style based on treemap theme.\n *\n * @param {TreeMapTheme} theme Specifies the theme of the treemap control.\n * @returns {IThemeStyle} Returns the theme.\n * @private\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n *\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n *\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n *\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n *\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n *\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n *\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n *\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n *\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n *\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n *\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap component.\n *\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap component.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap component.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap component.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the common title of the treemap component.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap component.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap component.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ size: '15px' }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap component.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap component.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap component.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap component.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property('#000816')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap component.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the levels of the treemap component.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend, updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Location, findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\nimport { LevelsData } from './../treemap';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data;\n        var totalRect;\n        if (LevelsData.levelsData && LevelsData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(LevelsData.levelsData[0], [])[0] : LevelsData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var x = this.treemap.drilledItems[count]['data'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var y = {};\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(y || LevelsData.levelsData[0]);\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || LevelsData.levelsData[0], totalRect);\n                this.renderLayoutItems(data || LevelsData.levelsData[0]);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treemap = this.treemap;\n        var newData = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ? groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var groupIndex = 0;\n        var isLeafItem = false;\n        var item;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        var index;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 : (levels.length === 0) ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var nextDatum = data[0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight\n            };\n            return convertToRect(container);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var headerHeight;\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var coordinates = [];\n        var isParent;\n        var gap;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var dataSum = 0;\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum_1 = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum_1 += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum_1;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItem = {};\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItemGroupname = {};\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems(parentItemGroupname);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.renderLayoutItems = function (renderData) {\n        var _this = this;\n        var textCollection = [];\n        var position;\n        var treeMap = this.treemap;\n        var colorMapping;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var trimHeader;\n        var textLocation = new Location(0, 0);\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textSize;\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var padding = 5;\n        var rectPath = '';\n        var isRender;\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var textOptions;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var level;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template',\n            styles: 'overflow: hidden; position: absolute;pointer-events: none;' +\n                'top:' + treeMap.areaRect.y + 'px;' +\n                'left:' + treeMap.areaRect.x + 'px;' +\n                'height:' + treeMap.areaRect.height + 'px;' +\n                'width:' + treeMap.areaRect.width + 'px;'\n        });\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[index].colorMapping;\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName;\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            if (this_1.treemap.isBlazor) {\n                var treemap = eventArgs.treemap, RenderItems = eventArgs.RenderItems, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"RenderItems\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        templateGroup.appendChild(templateEle);\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        _this.treemap.renderReactTemplates();\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n            updateBlazorTemplate(this.treemap.element.id + '_HeaderTemplate', 'HeaderTemplate', levels[levels.length - 1]);\n            updateBlazorTemplate(this.treemap.element.id + '_LabelTemplate', 'LabelTemplate', leaf);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var level;\n        var headerPosition;\n        var secondaryEle = document.getElementById(this.treemap.element.id + '_Secondary_Element');\n        var leaf = this.treemap.leafItemSettings;\n        var padding = 5;\n        var textSize;\n        var textCollection = [];\n        var customText;\n        var templateEle;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        var textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        var textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(LevelsData.defaultLevelsData)) {\n            if (LevelsData.defaultLevelsData.length > 0) {\n                LevelsData.levelsData = LevelsData.defaultLevelsData;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentData = findChildren(LevelsData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var option = colorMap(colorMapping, item['data'][this.treemap.equalColorValuePath], item['data'][this.treemap.rangeColorValuePath], item['data'][this.treemap.weightValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     *\n     * @param {string} color - Specifies the color\n     * @returns {string} - Returns the color\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype'])) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                template = template.replace(new RegExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateFn = getTemplateFunction(template);\n        var templateElement = templateFn(item['data'], this.treemap, template, this.treemap.element.id + baseTemplateId, false);\n        var labelEle = convertElement(templateElement, templateId, item['data']);\n        var templateSize = measureElement(labelEle, secondaryEle);\n        var templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n        labelEle.style.left = templateLocation.x + 'px';\n        labelEle.style.top = templateLocation.y + 'px';\n        return labelEle;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\n/**\n * Print module handles the print functionality for treemap.\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     *\n     * @param {string[] | string | Element} elements - Specifies the element\n     * @returns {Element} - Returns the element\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {TreeMap} treemap - Specifies the treemap instance\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return Print;\n}());\nexport { Print };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * ImageExport module handles the export to image functionality for treemap.\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the file or not.\n     * @returns {Promise} - Returns the promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'height': _this.control.availableSize.height.toString(),\n                    'width': _this.control.availableSize.width.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {TreeMap} treemap - Specifies the instance of the treemap.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (treemap) {\n        // Destroy method performed here\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * PdfExport module handles the export to pdf functionality for treemap.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName - Specifies the name of the document.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specifies whether to download the document or not.\n     * @returns {Promise} - Returns the string.\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (_this.control.availableSize.width - 60), _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {TreeMap} treemap - Specifies the treemap instance.\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (treemap) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/dot-notation */\n/* eslint-disable brace-style */\n/* eslint-disable max-len */\n/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Complex, Collection, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren, removeElement } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\nimport { Print } from './model/print';\nimport { ImageExport } from './model/image-export';\nimport { PdfExport } from './model/pdf-export';\n/**\n * Represents the treemap component.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**s\n     * Constructor for TreeMap component.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * resize the treemap\n         */\n        _this.isResize = false;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        /** @private */\n        _this.legendId = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.isBlazor = isBlazor();\n        this.trigger(load, { treemap: this.isBlazor ? null : this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        LevelsData.levelsData = null;\n        LevelsData.defaultLevelsData = null;\n        LevelsData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(LevelsData.levelsData)) {\n            LevelsData.defaultLevelsData = LevelsData.levelsData;\n        }\n        this.processDataManager();\n    };\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var ajaxModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var dataManager = dataModule.executeQuery(queryModule);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            ajaxModule = new Ajax(localAjax.dataOptions, localAjax.type, localAjax.async, localAjax.contentType);\n            ajaxModule.onSuccess = function (args) {\n                _this.dataSource = JSON.parse('[' + args + ']')[0];\n                _this.renderTreeMapElements();\n            };\n            ajaxModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, this.isBlazor ? { isResized: this.isResize } : { treemap: this, isResized: this.isResize });\n        this.isResize = false;\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (this.leafItemSettings.labelTemplate) {\n            resetBlazorTemplate(this.element.id + '_LabelTemplate', 'LabelTemplate');\n        }\n        for (var i = 0; i < this.levels.length; i++) {\n            if (this.levels[i].headerTemplate) {\n                resetBlazorTemplate(this.element.id + '_HeaderTemplate', 'HeaderTemplate');\n            }\n        }\n        this.clearTemplate();\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element',\n                styles: 'position: absolute;z-index:1;'\n            });\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * @private\n     * Render the treemap border\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = title.textStyle;\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        title.textStyle.fontFamily = this.themeStyle.fontFamily || title.textStyle.fontFamily;\n        title.textStyle.size = this.themeStyle.fontSize || title.textStyle.size;\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            LevelsData.levelsData = [];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var data_1 = {};\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        child.forEach(function (currentData, dataIndex) {\n                            if (currentData[path]) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path], levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                LevelsData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    LevelsData.hierarchyData = [];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    LevelsData.hierarchyData = extend([], this.dataSource, LevelsData.hierarchyData, true);\n                    for (var i = 0; i < LevelsData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(LevelsData.hierarchyData[i], i);\n                    }\n                    LevelsData.levelsData = LevelsData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (LevelsData.levelsData.length > 1) {\n                        this.reOrderLevelData(LevelsData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(LevelsData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childData;\n        var levelData = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var newData = {};\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData = {};\n        var level;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    level = this.levels[i];\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === LevelsData.hierarchyData.length - 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < LevelsData.hierarchyData.length; k++) {\n                childData = findChildren(LevelsData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    LevelsData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = LevelsData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param id - Specifies the element to print the treemap.\n     */\n    TreeMap.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param type - Specifies the index of the axis.\n     * @param fileName - Specifies file name for exporting the rendered treemap.\n     * @param orientation - Specifies the orientation of the pdf document.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    TreeMap.prototype.processFlatJsonData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var childGroupPath;\n        var orderNames = [];\n        var process = false;\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var level = {};\n            level['level'] = i;\n            level[groupPath] = [];\n            LevelsData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var currentData = {};\n                var childName = '';\n                if (this.dataSource[j][groupPath]) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath_1 = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath_1]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        LevelsData.levelsData[LevelsData.levelsData.length - 1][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     *\n     * @param start - Specifies the start value of the treemap level.\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData = LevelsData.levelsData[start][currentPath];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var previousData = LevelsData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ? [] : previousData[j][currentPath];\n                if (currentName.indexOf(previousData[j]['levelOrderName']) !== -1) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(LevelsData.levelsData[LevelsData.levelsData.length - 1][currentPath], 'Child');\n        LevelsData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     *\n     * @param processData - Specifies the treemap data.\n     * @param type - Specifies the type of the data.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var totalWeight;\n        var childData = [];\n        var levelName;\n        var start = 0;\n        var split;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var groupName;\n        var groupObj = {};\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeOnTreeMap);\n    };\n    /**\n     * To bind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        window.addEventListener('resize', this.resizeOnTreeMap.bind(this));\n    };\n    /**\n     * Method to set culture for maps\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     *\n     * @param e - Specifies the pointer event.\n     */\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        this.isResize = true;\n        var args = {\n            name: resize,\n            cancel: false,\n            previousSize: this.availableSize,\n            currentSize: new Size(0, 0),\n            treemap: this.isBlazor ? null : this\n        };\n        if (this.isBlazor) {\n            var treemap = args.treemap, blazorEventArgs = __rest(args, [\"treemap\"]);\n            args = blazorEventArgs;\n        }\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-treemap')) {\n            this.resizeTo = setTimeout(function () {\n                _this.unWireEVents();\n                _this.createSvg();\n                _this.refreshing = true;\n                _this.wireEVents();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resize, args, function (observedArgs) {\n                    _this.render();\n                });\n            }, 500);\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     *\n     * @param e - Specifies the mouse click event in the treemap.\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        var clickBlazorArgs = { cancel: false, name: click, mouseEvent: e };\n        this.trigger(click, this.isBlazor ? clickBlazorArgs : clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_')[6]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            if (this.isBlazor) {\n                var data = {\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    options: eventArgs.item['options'],\n                    rect: eventArgs.item['rect']\n                };\n                eventArgs.item = this.layout.renderItems[itemIndex]['data'];\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.innerHTML = observedArgs.text;\n                    }\n                    else {\n                        var itemSelect = targetId.split('_RectPath')[0];\n                        var itemTemplate = void 0;\n                        if (targetId.indexOf('_LabelTemplate') > -1) {\n                            itemTemplate = targetEle;\n                        }\n                        else {\n                            itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                        }\n                        if (!isNullOrUndefined(itemTemplate)) {\n                            if (_this.isBlazor) {\n                                var templateElement = createElement('div');\n                                templateElement.innerHTML = observedArgs.contentItemTemplate;\n                                var currentTemplateElement = templateElement.children[0].firstElementChild;\n                                itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0])\n                                    - (currentTemplateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0])\n                                    - (currentTemplateElement['style']['height'].split('px')[0] / 2) + 'px';\n                            }\n                            itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                        }\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     *\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        var doubleClickBlazorArgs = { cancel: false, name: doubleClick, mouseEvent: e };\n        this.trigger(doubleClick, this.isBlazor ? doubleClickBlazorArgs : doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     *\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        var rightClickBlazorArgs = { cancel: false, name: rightClick, mouseEvent: e };\n        this.trigger(rightClick, this.isBlazor ? rightClickBlazorArgs : rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     *\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     *\n     * @param e - Specifies the pointer event of mouse click.\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        var moveBlazorArgs = { cancel: false, name: mouseMove, mouseEvent: e };\n        this.trigger(mouseMove, this.isBlazor ? moveBlazorArgs : moveArgs);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            if (this.isBlazor) {\n                var data = {\n                    isLeafItem: eventArgs.item['isLeafItem'],\n                    groupIndex: eventArgs.item['groupIndex'],\n                    groupName: eventArgs.item['groupName'],\n                    isDrilled: eventArgs.item['isDrilled'],\n                    itemArea: eventArgs.item['itemArea'],\n                    levelOrderName: eventArgs.item['levelOrderName'],\n                    name: eventArgs.item['name'],\n                    rect: eventArgs.item['rect'],\n                    options: eventArgs.item['options']\n                };\n                eventArgs.item = data;\n                var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                eventArgs = blazorEventArgs;\n            }\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     *\n     * @param labelText - Specifies the label text.\n     * @param item - Specifies the treemap item.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     *\n     * @param labelText - Specifies the label text in treemap\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param directLevel - Specifies the current level.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (labelText, drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     *\n     * @param drillLevelValues - Specifies the values of drill level.\n     * @param item - Specifies the treemap item.\n     * @param i - Specifies the treemap item.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var drillLevelChild;\n        var newDrillItem = {};\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     *\n     * @param e - Specifies the pointer event of mouse.\n     */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var index;\n        var newDrillItem = {};\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        var endBlazorEvent;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            e.preventDefault();\n            index = parseFloat(targetId.split('_')[6]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.innerHTML;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(labelText, drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this.isBlazor ? null : this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: this.isBlazor ? null : newDrillItem\n                };\n                if (this.isBlazor) {\n                    var treemap = startEvent.treemap, blazorEventArgs = __rest(startEvent, [\"treemap\"]);\n                    startEvent = blazorEventArgs;\n                }\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems(newDrillItem);\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                endBlazorEvent = { cancel: false, name: drillEnd, renderItems: this.isBlazor ? null : this.layout.renderItems };\n                this.trigger(drillEnd, this.isBlazor ? endBlazorEvent : endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     *\n     * @param e - Specifies the pointer event of mouse.\n     */\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection, 'highlight');\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * This method is used to select or remove the selection of treemap item based on the provided selection settings.\n     */\n    TreeMap.prototype.selectItem = function (levelOrder, isSelected) {\n        if (isNullOrUndefined(isSelected)) {\n            isSelected = true;\n        }\n        var levelOrderName = '';\n        for (var i = 0; i < levelOrder.length; i++) {\n            if (i !== levelOrder.length - 1) {\n                levelOrderName += levelOrder[i] + '#';\n            }\n            else {\n                levelOrderName += levelOrder[i];\n            }\n        }\n        if (this.treeMapSelectionModule && this.selectionSettings.enable) {\n            this.treeMapSelectionModule.selectTreemapItem(levelOrderName, isSelected);\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the modules\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeMapModel} newProp - Specifies the new property\n     * @param {TreeMapModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var render = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'background':\n                    this.renderBorder();\n                    break;\n                case 'height':\n                case 'width':\n                case 'layoutType':\n                case 'levels':\n                case 'drillDownView':\n                case 'renderDirection':\n                case 'leafItemSettings':\n                case 'legendSettings':\n                case 'dataSource':\n                    render = true;\n                    break;\n            }\n        }\n        if (render) {\n            this.createSvg();\n            this.render();\n        }\n    };\n    /**\n     * Gets component name.\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method is used to dispose the treemap component.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        this.drilledItems = [];\n        this.levelSelection = [];\n        this.legendId = [];\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    TreeMap.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable @typescript-eslint/dot-notation */\n/* eslint-disable max-len */\nimport { LevelsData } from '../treemap';\nimport { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea, legendMaintain } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        this.heightIncrement = 0;\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * method for legend\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs;\n        eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        if (this.treemap.isBlazor) {\n            var treemap = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            // eslint-disable-next-line no-underscore-dangle\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                // eslint-disable-next-line no-underscore-dangle\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(LevelsData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(this.treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(LevelsData.levelsData[0], 'Parent');\n        }\n        if (this.legendCollections.length > 0) {\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var rectWidth = void 0;\n            var rectHeight = void 0;\n            var itemTextStyle = legend.textStyle;\n            var legendLength = this.legendCollections.length;\n            legend.textStyle.size = treemap.themeStyle.legendFontSize || legend.textStyle.size;\n            legend.textStyle.fontFamily = treemap.themeStyle.fontFamily || legend.textStyle.fontFamily;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], legend.textStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.totalPages[0]['Collection'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var itemTextStyle_1 = legend.textStyle;\n                var legendLength_1 = this.legendCollections.length;\n                var rectWidth_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength_1) :\n                    (legendWidth / legendLength_1) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                var rectHeight_1 = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength_1) : (legendHeight / legendLength_1);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth_1) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight_1);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth_1 : rectHeight_1), legendText, itemTextStyle_1);\n                        itemTextSize = measureText(legendText, itemTextStyle_1);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth_1 / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight_1 + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth_1 + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight_1 / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength_1 - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth_1) - itemStartX) :\n                            (rectWidth_1 + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight_1 + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight_1) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth_1, height: rectHeight_1, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data, type) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var isAddData;\n        var fill;\n        var rangeValue;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData;\n        var legendText;\n        var itemValue;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var _i = 0, colorMapping_1 = colorMapping; _i < colorMapping_1.length; _i++) {\n                var colorMap = colorMapping_1[_i];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    var gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue,\n                        legendName: legendText, legendFill: fill, legendData: [],\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To draw the legend\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var render = treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = treemap.element.id + '_Legend_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Index_' + i + '_Text';\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n                        || (treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n        legendMaintain(this.treemap, this.legendGroup);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textOptions;\n        var legendRtlLocation;\n        var renderOptions;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: this_1.treemap.isBlazor ? null : treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                if (this_1.treemap.isBlazor) {\n                    var treemap_1 = eventArgs.treemap, blazorEventArgs = __rest(eventArgs, [\"treemap\"]);\n                    eventArgs = blazorEventArgs;\n                }\n                this_1.treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || _this.treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var textOptions;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To rendered the interactive pointer\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentData = void 0;\n            var legendRect = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rect = void 0;\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_')[6])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect_1 = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect_1);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        var pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        // eslint-disable-next-line prefer-const\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the interactive pointer\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To change the next page\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        this.drawLegend();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Wire events for event handler\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To add the event listener\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the event listener\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Get module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {TreeMap} treemap - Specifies treemap instance\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function (treemap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Get the gradient color for interactive legend.\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            var y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Browser, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /* eslint-disable max-len */\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Mouse down event in highlight\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eventArgs;\n        var items = [];\n        var eventBlazorArgs;\n        var highlight = this.treemap.highlightSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? this.treemap.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection, 'highlight');\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[element.id.split('_')[6]];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        eventBlazorArgs = { cancel: false, name: itemHighlight, items: null, elements: highLightElements };\n                        treemap.trigger(itemHighlight, treemap.isBlazor ? eventBlazorArgs : eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true) && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection, 'highlight');\n                }\n                this.shapeTarget = 'highlight';\n                var index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ? selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection, 'highlight');\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection, 'highlight');\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     *\n     * @param {TreeMap} treeMap - Specifies the instance of the treemap.\n     * @returns {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMapSelection(treeMap) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeSelectionCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Mouse down event in selection\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eventBlazorArgs;\n        var treemap = this.treemap;\n        treemap.levelSelection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var selectionElements = [];\n        var opacity;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.treemap.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[element.id.split('_')[6]];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        treemap.levelSelection.push(element.id);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    eventBlazorArgs = { cancel: false, name: itemSelected, text: labelText, contentItemTemplate: labelText };\n                    if (treemap.isBlazor) {\n                        var treemap_1 = eventArgs.treemap, items_1 = eventArgs.items, elements = eventArgs.elements, blazorEventArgs = __rest(eventArgs, [\"treemap\", \"items\", \"elements\"]);\n                        eventBlazorArgs = blazorEventArgs;\n                    }\n                    treemap.trigger(itemSelected, treemap.isBlazor ? eventBlazorArgs : eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            var itemSelect = targetId.split('_RectPath')[0];\n                            var itemTemplate = void 0;\n                            if (targetId.indexOf('_LabelTemplate') > -1) {\n                                itemTemplate = targetEle;\n                            }\n                            else {\n                                itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n                            }\n                            if (!isNullOrUndefined(itemTemplate)) {\n                                if (treemap.isBlazor) {\n                                    var templateCreated = createElement('div');\n                                    templateCreated.innerHTML = observedArgs.contentItemTemplate;\n                                    var templateElement = templateCreated.children[0].firstElementChild;\n                                    itemTemplate['style']['left'] = Number(itemTemplate['style']['left'].split('px')[0]) - (templateElement['style']['width'].split('px')[0] / 2) + 'px';\n                                    itemTemplate['style']['top'] = Number(itemTemplate['style']['top'].split('px')[0]) - (templateElement['style']['height'].split('px')[0] / 2) + 'px';\n                                }\n                                itemTemplate.innerHTML = observedArgs.contentItemTemplate;\n                            }\n                        }\n                    });\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection, 'selection');\n                this.shapeSelectionCollection = [];\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                this.treemap.legendId = [];\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection, 'selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                var index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_')[4]) : parseFloat(targetId.split('_')[3]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById('container_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection, 'Selection');\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * @param {string} levelOrder - Specifies the level order of treemap item\n     * @param {boolean} enable - Specifies the boolean value\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.selectTreemapItem = function (levelOrder, enable) {\n        if (enable) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = void 0;\n            for (var s = 0; s < this.treemap.layout.renderItems.length; s++) {\n                if (levelOrder === this.treemap.layout.renderItems[s]['levelOrderName']) {\n                    item = this.treemap.layout.renderItems[s];\n                    break;\n                }\n            }\n            var selection = this.treemap.selectionSettings;\n            var selectionElements = [];\n            var element = void 0;\n            var index = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var items = [];\n            this.treemap.levelSelection = [];\n            var layoutID = this.treemap.element.id + '_TreeMap_' + this.treemap.layoutType + '_Layout';\n            var treeMapElement = document.getElementById(layoutID);\n            var orders = findHightLightItems(item, [], selection.mode, this.treemap);\n            for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                element = treeMapElement.childNodes[i];\n                item = this.treemap.layout.renderItems[element.id.split('_')[6]];\n                if (orders.indexOf(item['levelOrderName']) > -1) {\n                    selectionElements.push(element);\n                    this.treemap.levelSelection.push(element.id);\n                    items.push(item);\n                }\n            }\n            if (this.treemap.legendSettings.visible) {\n                for (var m = 0; m < items.length; m++) {\n                    this.shapeSelect = false;\n                    var length_5 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection, 'selection');\n                    index = getLegendIndex(length_5, items[m], this.treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById('container_Legend_Shape_Index_' + index) : document.getElementById('container_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.treemap.legendId.push(this.shapeSelectId);\n                        this.shapeSelectionCollection.push({\n                            legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n            }\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            var selectionElement = document.getElementById(this.treemap.levelSelection[0]);\n            this.treemap.selectionId = selectionElement.childNodes[0]['id'];\n            var highLightElements = document.getElementsByClassName('treeMapHighLight');\n            for (var k = 0; k < selectionElements.length; k++) {\n                element = selectionElements[k];\n                if (highLightElements.length > 0) {\n                    for (var j = 0; j < highLightElements.length; j++) {\n                        if (highLightElements[j].id === element.id) {\n                            highLightElements[j].classList.remove('treeMapHighLight');\n                        }\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                }\n                else {\n                    selection.fill = selection.fill === 'null' ?\n                        this.treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                        : selection.fill;\n                    applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                    element.classList.add('treeMapSelection');\n                }\n            }\n        }\n        else {\n            removeShape(this.shapeSelectionCollection, 'selection');\n            this.shapeElement = undefined;\n            this.treemap.levelSelection = [];\n            this.shapeSelect = true;\n            this.shapeSelectId = '';\n            this.treemap.legendId = [];\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            this.treemap.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function (treeMap) {\n        this.removeEventListener();\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var location;\n        var toolTipHeader;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_')[6])];\n            if (!isNullOrUndefined(item)) {\n                toolTipHeader = item['name'];\n                value = item['weight'];\n                toolTipData = item['data'];\n                markerFill = item['options']['fill'];\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString()];\n                }\n                else {\n                    tooltipContent = [textFormatter(this.tooltipSettings.format, toolTipData, this.treemap) ||\n                            this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap)];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip',\n                        styles: 'position: absolute;pointer-events:none;'\n                    });\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                if (this.treemap.isBlazor) {\n                    var tooltipArgs_1 = {\n                        cancel: false,\n                        location: tootipArgs.options['location'],\n                        text: tootipArgs.options['text'],\n                        textStyle: tootipArgs.options['textStyle'],\n                        data: tootipArgs.options['data'],\n                        template: tootipArgs.options['template'],\n                        name: tooltipRendering\n                    };\n                    this.treemap.trigger(tooltipRendering, tooltipArgs_1, function (args) {\n                        _this.addTooltip(null, markerFill, tooltipEle, tooltipArgs_1);\n                    });\n                }\n                else {\n                    this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                        _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                    });\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                blazorTemplate: { name: 'TooltipTemplate', parent: this.treemap.tooltipSettings }\n            });\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} returns string\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {TreeMap} treeMap - Specifies the instance of the treemap\n     * @returns {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function (treeMap) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection, index.Print, index.PdfExport, index.ImageExport);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","levels","groupPath","labelPath","weightValuePath","findChildren","data","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","querySelector","trim","e","convertElement","element","labelId","childElement","styles","elementLength","templateHtml","RegExp","toString","findLabelLocation","rect","labelSize","getBoundingClientRect","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","legendMaintain","legendGroup","legendId","removeClassNames","elements","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","window","getComputedStyle","isRGBValue","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","triggerDownload","fileName","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","removeElement","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","subTitleFontColor","tooltipFillColor","tooltipFontColor","legendTitleColor","legendTextColor","tooltipFillOpacity","tooltipTextOpacity","legendFontSize","labelFontFamily","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","__rest","s","t","getOwnPropertySymbols","LayoutPanel","processLayoutPanel","totalRect","LevelsData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum_1","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","renderData","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","isBlazor","blazorEventArgs","trigger","observedArgs","drawPath","renderItemText","renderTemplate","renderReactTemplates","tabIndex","updateBlazorTemplate","svgObject","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","textLocation","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateId","baseTemplateId","labelEle","templateLocation","textValue","Theme","mapsTitleFont","Print","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","div","cloneNode","Element","getModuleName","destroy","ImageExport","export","allowDownload","Promise","resolve","reject","availableSize","Browser","userAgent","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image_1","Image","context_1","getContext","onload","drawImage","revokeObjectURL","toDataURL","src","PdfExport","orientation","PdfPageOrientation","Landscape","image","context","PdfDocument","imageString","pageSettings","pages","add","graphics","PdfBitmap","save","TreeMap","isResize","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","ajaxModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Ajax","onSuccess","args","JSON","parse","send","processingData","visible","renderLegend","elementChange","isResized","renderComplete","firstChild","hasChildNodes","resetBlazorTemplate","clearTemplate","containerWidth","containerHeight","secondaryElement","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","dataIndex","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","orderNames","level","childName","name_1","childGroupPath_1","start","currentName","currentPath","prevPath","previousData","groupObj","parseFloat","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeOnTreeMap","addEventListener","bind","Internationalization","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","targetId","labelText","clickArgs","mouseEvent","clickBlazorArgs","preventDefault","contentItemTemplate","itemSelect","itemTemplate","templateElement","currentTemplateElement","firstElementChild","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","doubleClickBlazorArgs","rightClickArgs","rightClickBlazorArgs","mouseDown","notify","moveArgs","moveBlazorArgs","cursor","isDrilled","itemArea","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","endBlazorEvent","layoutID","templateID","drillMouseMove","drillLength","rightClick","which","layerElementId","textContent","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","selectItem","levelOrder","isSelected","treeMapSelectionModule","enable","selectTreemapItem","requiredModules","modules","tooltipSettings","member","highlightSettings","onPropertyChanged","newProp","oldProp","removeSvg","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","itemTextStyle_1","legendLength_1","rectWidth_1","rectHeight_1","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","colorMapping_1","showLegend","isAddNewLegendData","colors","q","stop1Color","colorStop","stop2Color","gradient","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","textOptions","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","rect_1","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","isDestroyed","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","eventBlazorArgs","treeMapElement","orders","highlight","highLightElements","selectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","templateCreated","length_4","targetEle_1","m","length_5","selectionElement","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","tooltipArgs_1","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","blazorTemplate","appendTo","tooltipElementId","index.TreeMap","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection","index.Print","index.PdfExport","index.ImageExport"],"mappings":"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"}