{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        if (isBlazor()) {\n                                            var taskData = 'taskData';\n                                            editedData.taskData[keys[j]]\n                                                = editedData[keys[j]] = control.grid.currentViewData[i][keys[j]]\n                                                    = control.grid.currentViewData[i][taskData][keys[j]] = treeData[i][keys[j]];\n                                        }\n                                        else {\n                                            editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar isRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (isRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    isRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            isRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length))) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { InfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        Grid.Inject(InfiniteScroll);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @blazorType void\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    parentTarget = e.target.parentElement;\n                    summaryElement = this.findnextRowElement(parentTarget);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row_1 = summaryElement.children[cellIndex];\n                        addClass([row_1], 'e-focused');\n                        addClass([row_1], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    parentTarget = e.target.parentElement;\n                    summaryElement = this.findPreviousRowElement(parentTarget);\n                    if (summaryElement !== null) {\n                        var rIndex = summaryElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn = function (args) { return _this.gridRendered(args); };\n            gridObserver.on('component-rendered', fn, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate();\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate();\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        if (_this.enableCollapseAll && args.requestType === 'paging') {\n                            removeClass([rows[i]], 'e-treerowexpanded');\n                        }\n                        else {\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        }\n                        if (_this.enableCollapseAll && args.requestType === 'paging') {\n                            addClass([rows[i]], 'e-treerowcollapsed');\n                        }\n                        else {\n                            addClass([rows[i]], 'e-treerowexpanded');\n                        }\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        if (_this.enableCollapseAll && args.requestType === 'paging') {\n                            removeClass([expandicon], 'e-treegridexpand');\n                            addClass([expandicon], 'e-treegridcollapse');\n                        }\n                        else {\n                            removeClass([expandicon], 'e-treegridcollapse');\n                            addClass([expandicon], 'e-treegridexpand');\n                        }\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        if (this.grid.getFrozenColumns() > 0) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (draggedRecord.hasChildRecords && isNullOrUndefined(this.parent.idMapping)) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function () {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function () {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!this[initialRowTop]) {\n            this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n            return;\n        }*/\n            /*if(delta > 45 || delta < -45){\n          this.isWheeling = true;\n        }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n        if (args.e.requestType === 'save' && getValue('action', args.e) === 'add'\n            && this.parent.editSettings.newRowPosition === 'Child') {\n            args.result[0].level += 1;\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","isBlazor","currentViewData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","isRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","field","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","InfiniteScroll","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","refreshScrollOffset","collapsingArgs","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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"}