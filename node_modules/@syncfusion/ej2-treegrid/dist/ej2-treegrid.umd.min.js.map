{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        if (isBlazor()) {\n                                            var taskData = 'taskData';\n                                            editedData.taskData[keys[j]]\n                                                = editedData[keys[j]] = control.grid.currentViewData[i][keys[j]]\n                                                    = control.grid.currentViewData[i][taskData][keys[j]] = treeData[i][keys[j]];\n                                        }\n                                        else {\n                                            editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar isRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (isRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    isRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            isRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template) && !isBlazor()) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length))) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { InfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        Grid.Inject(InfiniteScroll);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @blazorType void\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    parentTarget = e.target.parentElement;\n                    summaryElement = this.findnextRowElement(parentTarget);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row_1 = summaryElement.children[cellIndex];\n                        addClass([row_1], 'e-focused');\n                        addClass([row_1], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    parentTarget = e.target.parentElement;\n                    summaryElement = this.findPreviousRowElement(parentTarget);\n                    if (summaryElement !== null) {\n                        var rIndex = summaryElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn = function (args) { return _this.gridRendered(args); };\n            gridObserver.on('component-rendered', fn, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate();\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate();\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        if (_this.enableCollapseAll && args.requestType === 'paging') {\n                            removeClass([rows[i]], 'e-treerowexpanded');\n                        }\n                        else {\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        }\n                        if (_this.enableCollapseAll && args.requestType === 'paging') {\n                            addClass([rows[i]], 'e-treerowcollapsed');\n                        }\n                        else {\n                            addClass([rows[i]], 'e-treerowexpanded');\n                        }\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        if (_this.enableCollapseAll && args.requestType === 'paging') {\n                            removeClass([expandicon], 'e-treegridexpand');\n                            addClass([expandicon], 'e-treegridcollapse');\n                        }\n                        else {\n                            removeClass([expandicon], 'e-treegridcollapse');\n                            addClass([expandicon], 'e-treegridexpand');\n                        }\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template' && !isBlazor()) {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        if (this.grid.getFrozenColumns() > 0) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (draggedRecord.hasChildRecords && isNullOrUndefined(this.parent.idMapping)) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function () {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function () {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        this.parent.grid.focusModule.restoreFocus();\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!this[initialRowTop]) {\n            this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n            return;\n        }*/\n            /*if(delta > 45 || delta < -45){\n          this.isWheeling = true;\n        }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n        if (args.e.requestType === 'save' && getValue('action', args.e) === 'add'\n            && this.parent.editSettings.newRowPosition === 'Child') {\n            args.result[0].level += 1;\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","isBlazor","currentViewData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","isRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","field","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","InfiniteScroll","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","gridObserver","gridRendered","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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"}